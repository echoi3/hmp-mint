{"ast":null,"code":"import { getError, getErrorByCode, isReservedErrorCode } from \"./error\";\nimport { INTERNAL_ERROR, SERVER_ERROR } from \"./constants\";\nexport function payloadId() {\n  let entropy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;\n  const date = Date.now() * Math.pow(10, entropy);\n  const extra = Math.floor(Math.random() * Math.pow(10, entropy));\n  return date + extra;\n}\nexport function getBigIntRpcId() {\n  let entropy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 6;\n  return BigInt(payloadId(entropy));\n}\nexport function formatJsonRpcRequest(method, params, id) {\n  return {\n    id: id || payloadId(),\n    jsonrpc: \"2.0\",\n    method,\n    params\n  };\n}\nexport function formatJsonRpcResult(id, result) {\n  return {\n    id,\n    jsonrpc: \"2.0\",\n    result\n  };\n}\nexport function formatJsonRpcError(id, error, data) {\n  return {\n    id,\n    jsonrpc: \"2.0\",\n    error: formatErrorMessage(error, data)\n  };\n}\nexport function formatErrorMessage(error, data) {\n  if (typeof error === \"undefined\") {\n    return getError(INTERNAL_ERROR);\n  }\n\n  if (typeof error === \"string\") {\n    error = Object.assign(Object.assign({}, getError(SERVER_ERROR)), {\n      message: error\n    });\n  }\n\n  if (typeof data !== \"undefined\") {\n    error.data = data;\n  }\n\n  if (isReservedErrorCode(error.code)) {\n    error = getErrorByCode(error.code);\n  }\n\n  return error;\n}","map":{"version":3,"mappings":"AAAA,SAASA,QAAT,EAAmBC,cAAnB,EAAmCC,mBAAnC,QAAiF,SAAjF;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,aAA7C;AAGA,OAAM,SAAUC,SAAV,GAA+B;AAAA,MAAXC,OAAW,uEAAD,CAAC;AACnC,QAAMC,IAAI,GAAGC,IAAI,CAACC,GAAL,KAAaC,IAAI,CAACC,GAAL,CAAS,EAAT,EAAaL,OAAb,CAA1B;AACA,QAAMM,KAAK,GAAGF,IAAI,CAACG,KAAL,CAAWH,IAAI,CAACI,MAAL,KAAgBJ,IAAI,CAACC,GAAL,CAAS,EAAT,EAAaL,OAAb,CAA3B,CAAd;AACA,SAAOC,IAAI,GAAGK,KAAd;AACD;AAED,OAAM,SAAUG,cAAV,GAAoC;AAAA,MAAXT,OAAW,uEAAD,CAAC;AACxC,SAAOU,MAAM,CAACX,SAAS,CAACC,OAAD,CAAV,CAAb;AACD;AAED,OAAM,SAAUW,oBAAV,CACJC,MADI,EAEJC,MAFI,EAGJC,EAHI,EAGO;AAEX,SAAO;AACLA,MAAE,EAAEA,EAAE,IAAIf,SAAS,EADd;AAELgB,WAAO,EAAE,KAFJ;AAGLH,UAHK;AAILC;AAJK,GAAP;AAMD;AAED,OAAM,SAAUG,mBAAV,CAAuCF,EAAvC,EAAmDG,MAAnD,EAA4D;AAChE,SAAO;AACLH,MADK;AAELC,WAAO,EAAE,KAFJ;AAGLE;AAHK,GAAP;AAKD;AAED,OAAM,SAAUC,kBAAV,CACJJ,EADI,EAEJK,KAFI,EAGJC,IAHI,EAGS;AAEb,SAAO;AACLN,MADK;AAELC,WAAO,EAAE,KAFJ;AAGLI,SAAK,EAAEE,kBAAkB,CAACF,KAAD,EAAQC,IAAR;AAHpB,GAAP;AAKD;AAED,OAAM,SAAUC,kBAAV,CAA6BF,KAA7B,EAA6DC,IAA7D,EAA0E;AAC9E,MAAI,OAAOD,KAAP,KAAiB,WAArB,EAAkC;AAChC,WAAOzB,QAAQ,CAACG,cAAD,CAAf;AACD;;AACD,MAAI,OAAOsB,KAAP,KAAiB,QAArB,EAA+B;AAC7BA,SAAK,mCACAzB,QAAQ,CAACI,YAAD,CADR,GACsB;AACzBwB,aAAO,EAAEH;AADgB,KADtB,CAAL;AAID;;AACD,MAAI,OAAOC,IAAP,KAAgB,WAApB,EAAiC;AAC/BD,SAAK,CAACC,IAAN,GAAaA,IAAb;AACD;;AACD,MAAIxB,mBAAmB,CAACuB,KAAK,CAACI,IAAP,CAAvB,EAAqC;AACnCJ,SAAK,GAAGxB,cAAc,CAACwB,KAAK,CAACI,IAAP,CAAtB;AACD;;AACD,SAAOJ,KAAP;AACD","names":["getError","getErrorByCode","isReservedErrorCode","INTERNAL_ERROR","SERVER_ERROR","payloadId","entropy","date","Date","now","Math","pow","extra","floor","random","getBigIntRpcId","BigInt","formatJsonRpcRequest","method","params","id","jsonrpc","formatJsonRpcResult","result","formatJsonRpcError","error","data","formatErrorMessage","message","code"],"sourceRoot":"","sources":["../../src/format.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}