{"ast":null,"code":"import WalletConnect from \"@walletconnect/client\";\nimport QRCodeModal from \"@walletconnect/qrcode-modal\";\nimport HttpConnection from \"@walletconnect/http-connection\";\nimport { payloadId, signingMethods, parsePersonalSign, getRpcUrl } from \"@walletconnect/utils\";\n\nconst ProviderEngine = require(\"web3-provider-engine\");\n\nconst CacheSubprovider = require(\"web3-provider-engine/subproviders/cache\");\n\nconst FixtureSubprovider = require(\"web3-provider-engine/subproviders/fixture\");\n\nconst FilterSubprovider = require(\"web3-provider-engine/subproviders/filters\");\n\nconst HookedWalletSubprovider = require(\"web3-provider-engine/subproviders/hooked-wallet\");\n\nconst NonceSubprovider = require(\"web3-provider-engine/subproviders/nonce-tracker\");\n\nconst SubscriptionsSubprovider = require(\"web3-provider-engine/subproviders/subscriptions\");\n\nclass WalletConnectProvider extends ProviderEngine {\n  constructor(opts) {\n    super({\n      pollingInterval: opts.pollingInterval || 8000\n    });\n    this.bridge = \"https://bridge.walletconnect.org\";\n    this.qrcode = true;\n    this.qrcodeModal = QRCodeModal;\n    this.qrcodeModalOptions = undefined;\n    this.rpc = null;\n    this.infuraId = \"\";\n    this.http = null;\n    this.isConnecting = false;\n    this.connected = false;\n    this.connectCallbacks = [];\n    this.accounts = [];\n    this.chainId = 1;\n    this.rpcUrl = \"\";\n\n    this.enable = async () => {\n      const wc = await this.getWalletConnector();\n\n      if (wc) {\n        this.start();\n        this.subscribeWalletConnector();\n        return wc.accounts;\n      } else {\n        throw new Error(\"Failed to connect to WalleConnect\");\n      }\n    };\n\n    this.request = async payload => {\n      return this.send(payload);\n    };\n\n    this.send = async (payload, callback) => {\n      var _a;\n\n      if (typeof payload === \"string\") {\n        const method = payload;\n        let params = callback;\n\n        if (method === \"personal_sign\") {\n          params = parsePersonalSign(params);\n        }\n\n        return this.sendAsyncPromise(method, params);\n      }\n\n      payload = Object.assign({\n        id: payloadId(),\n        jsonrpc: \"2.0\"\n      }, payload);\n\n      if (payload.method === \"personal_sign\") {\n        payload.params = parsePersonalSign(payload.params);\n      }\n\n      if (callback) {\n        this.sendAsync(payload, callback);\n        return;\n      }\n\n      if (payload.method === \"eth_signTypedData_v4\" && ((_a = this.walletMeta) === null || _a === void 0 ? void 0 : _a.name) === \"MetaMask\") {\n        const {\n          result\n        } = await this.handleOtherRequests(payload);\n        return result;\n      } else {\n        return this.sendAsyncPromise(payload.method, payload.params);\n      }\n    };\n\n    this.onConnect = callback => {\n      this.connectCallbacks.push(callback);\n    };\n\n    this.triggerConnect = result => {\n      if (this.connectCallbacks && this.connectCallbacks.length) {\n        this.connectCallbacks.forEach(callback => callback(result));\n      }\n    };\n\n    this.bridge = opts.connector ? opts.connector.bridge : opts.bridge || \"https://bridge.walletconnect.org\";\n    this.qrcode = typeof opts.qrcode === \"undefined\" || opts.qrcode !== false;\n    this.qrcodeModal = opts.qrcodeModal || this.qrcodeModal;\n    this.qrcodeModalOptions = opts.qrcodeModalOptions;\n    this.wc = opts.connector || new WalletConnect({\n      bridge: this.bridge,\n      qrcodeModal: this.qrcode ? this.qrcodeModal : undefined,\n      qrcodeModalOptions: this.qrcodeModalOptions,\n      storageId: opts === null || opts === void 0 ? void 0 : opts.storageId,\n      signingMethods: opts === null || opts === void 0 ? void 0 : opts.signingMethods,\n      clientMeta: opts === null || opts === void 0 ? void 0 : opts.clientMeta\n    });\n    this.rpc = opts.rpc || null;\n\n    if (!this.rpc && (!opts.infuraId || typeof opts.infuraId !== \"string\" || !opts.infuraId.trim())) {\n      throw new Error(\"Missing one of the required parameters: rpc or infuraId\");\n    }\n\n    this.infuraId = opts.infuraId || \"\";\n    this.chainId = (opts === null || opts === void 0 ? void 0 : opts.chainId) || this.chainId;\n    this.initialize();\n  }\n\n  get isWalletConnect() {\n    return true;\n  }\n\n  get connector() {\n    return this.wc;\n  }\n\n  get walletMeta() {\n    return this.wc.peerMeta;\n  }\n\n  async disconnect() {\n    this.close();\n  }\n\n  async close() {\n    const wc = await this.getWalletConnector({\n      disableSessionCreation: true\n    });\n    await wc.killSession();\n    await this.onDisconnect();\n  }\n\n  async handleRequest(payload) {\n    try {\n      let response;\n      let result = null;\n      const wc = await this.getWalletConnector();\n\n      switch (payload.method) {\n        case \"wc_killSession\":\n          await this.close();\n          result = null;\n          break;\n\n        case \"eth_accounts\":\n          result = wc.accounts;\n          break;\n\n        case \"eth_coinbase\":\n          result = wc.accounts[0];\n          break;\n\n        case \"eth_chainId\":\n          result = wc.chainId;\n          break;\n\n        case \"net_version\":\n          result = wc.chainId;\n          break;\n\n        case \"eth_uninstallFilter\":\n          this.sendAsync(payload, _ => _);\n          result = true;\n          break;\n\n        default:\n          response = await this.handleOtherRequests(payload);\n      }\n\n      if (response) {\n        return response;\n      }\n\n      return this.formatResponse(payload, result);\n    } catch (error) {\n      this.emit(\"error\", error);\n      throw error;\n    }\n  }\n\n  async handleOtherRequests(payload) {\n    if (!signingMethods.includes(payload.method) && payload.method.startsWith(\"eth_\")) {\n      return this.handleReadRequests(payload);\n    }\n\n    const wc = await this.getWalletConnector();\n    const result = await wc.sendCustomRequest(payload);\n    return this.formatResponse(payload, result);\n  }\n\n  async handleReadRequests(payload) {\n    if (!this.http) {\n      const error = new Error(\"HTTP Connection not available\");\n      this.emit(\"error\", error);\n      throw error;\n    }\n\n    return this.http.send(payload);\n  }\n\n  formatResponse(payload, result) {\n    return {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      result: result\n    };\n  }\n\n  getWalletConnector() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      disableSessionCreation = false\n    } = opts;\n    return new Promise((resolve, reject) => {\n      const wc = this.wc;\n\n      if (this.isConnecting) {\n        this.onConnect(x => resolve(x));\n      } else if (!wc.connected && !disableSessionCreation) {\n        this.isConnecting = true;\n        wc.on(\"modal_closed\", () => {\n          reject(new Error(\"User closed modal\"));\n        });\n        wc.createSession({\n          chainId: this.chainId\n        }).then(() => {\n          wc.on(\"connect\", (error, payload) => {\n            if (error) {\n              this.isConnecting = false;\n              return reject(error);\n            }\n\n            this.isConnecting = false;\n            this.connected = true;\n\n            if (payload) {\n              this.updateState(payload.params[0]);\n            }\n\n            this.emit(\"connect\");\n            this.triggerConnect(wc);\n            resolve(wc);\n          });\n        }).catch(error => {\n          this.isConnecting = false;\n          reject(error);\n        });\n      } else {\n        if (!this.connected) {\n          this.connected = true;\n          this.updateState(wc.session);\n        }\n\n        resolve(wc);\n      }\n    });\n  }\n\n  async subscribeWalletConnector() {\n    const wc = await this.getWalletConnector();\n    wc.on(\"disconnect\", error => {\n      if (error) {\n        this.emit(\"error\", error);\n        return;\n      }\n\n      this.onDisconnect();\n    });\n    wc.on(\"session_update\", (error, payload) => {\n      if (error) {\n        this.emit(\"error\", error);\n        return;\n      }\n\n      this.updateState(payload.params[0]);\n    });\n  }\n\n  async onDisconnect() {\n    await this.stop();\n    this.emit(\"close\", 1000, \"Connection closed\");\n    this.emit(\"disconnect\", 1000, \"Connection disconnected\");\n    this.connected = false;\n  }\n\n  async updateState(sessionParams) {\n    const {\n      accounts,\n      chainId,\n      networkId,\n      rpcUrl\n    } = sessionParams;\n\n    if (!this.accounts || accounts && this.accounts !== accounts) {\n      this.accounts = accounts;\n      this.emit(\"accountsChanged\", accounts);\n    }\n\n    if (!this.chainId || chainId && this.chainId !== chainId) {\n      this.chainId = chainId;\n      this.emit(\"chainChanged\", chainId);\n    }\n\n    if (!this.networkId || networkId && this.networkId !== networkId) {\n      this.networkId = networkId;\n      this.emit(\"networkChanged\", networkId);\n    }\n\n    this.updateRpcUrl(this.chainId, rpcUrl || \"\");\n  }\n\n  updateRpcUrl(chainId) {\n    let rpcUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    const rpc = {\n      infuraId: this.infuraId,\n      custom: this.rpc || undefined\n    };\n    rpcUrl = rpcUrl || getRpcUrl(chainId, rpc);\n\n    if (rpcUrl) {\n      this.rpcUrl = rpcUrl;\n      this.updateHttpConnection();\n    } else {\n      this.emit(\"error\", new Error(`No RPC Url available for chainId: ${chainId}`));\n    }\n  }\n\n  updateHttpConnection() {\n    if (this.rpcUrl) {\n      this.http = new HttpConnection(this.rpcUrl);\n      this.http.on(\"payload\", payload => this.emit(\"payload\", payload));\n      this.http.on(\"error\", error => this.emit(\"error\", error));\n    }\n  }\n\n  sendAsyncPromise(method, params) {\n    return new Promise((resolve, reject) => {\n      this.sendAsync({\n        id: payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params: params || []\n      }, (error, response) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        resolve(response.result);\n      });\n    });\n  }\n\n  initialize() {\n    this.updateRpcUrl(this.chainId);\n    this.addProvider(new FixtureSubprovider({\n      eth_hashrate: \"0x00\",\n      eth_mining: false,\n      eth_syncing: true,\n      net_listening: true,\n      web3_clientVersion: `WalletConnect/v1.x.x/javascript`\n    }));\n    this.addProvider(new CacheSubprovider());\n    this.addProvider(new SubscriptionsSubprovider());\n    this.addProvider(new FilterSubprovider());\n    this.addProvider(new NonceSubprovider());\n    this.addProvider(new HookedWalletSubprovider(this.configWallet()));\n    this.addProvider({\n      handleRequest: async (payload, next, end) => {\n        try {\n          const {\n            error,\n            result\n          } = await this.handleRequest(payload);\n          end(error, result);\n        } catch (error) {\n          end(error);\n        }\n      },\n      setEngine: _ => _\n    });\n  }\n\n  configWallet() {\n    return {\n      getAccounts: async cb => {\n        try {\n          const wc = await this.getWalletConnector();\n          const accounts = wc.accounts;\n\n          if (accounts && accounts.length) {\n            cb(null, accounts);\n          } else {\n            cb(new Error(\"Failed to get accounts\"));\n          }\n        } catch (error) {\n          cb(error);\n        }\n      },\n      processMessage: async (msgParams, cb) => {\n        try {\n          const wc = await this.getWalletConnector();\n          const result = await wc.signMessage([msgParams.from, msgParams.data]);\n          cb(null, result);\n        } catch (error) {\n          cb(error);\n        }\n      },\n      processPersonalMessage: async (msgParams, cb) => {\n        try {\n          const wc = await this.getWalletConnector();\n          const result = await wc.signPersonalMessage([msgParams.data, msgParams.from]);\n          cb(null, result);\n        } catch (error) {\n          cb(error);\n        }\n      },\n      processSignTransaction: async (txParams, cb) => {\n        try {\n          const wc = await this.getWalletConnector();\n          const result = await wc.signTransaction(txParams);\n          cb(null, result);\n        } catch (error) {\n          cb(error);\n        }\n      },\n      processTransaction: async (txParams, cb) => {\n        try {\n          const wc = await this.getWalletConnector();\n          const result = await wc.sendTransaction(txParams);\n          cb(null, result);\n        } catch (error) {\n          cb(error);\n        }\n      },\n      processTypedMessage: async (msgParams, cb) => {\n        try {\n          const wc = await this.getWalletConnector();\n          const result = await wc.signTypedData([msgParams.from, msgParams.data]);\n          cb(null, result);\n        } catch (error) {\n          cb(error);\n        }\n      }\n    };\n  }\n\n}\n\nexport default WalletConnectProvider;","map":{"version":3,"mappings":"AAAA,OAAOA,aAAP,MAA0B,uBAA1B;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,iBAApC,EAAuDC,SAAvD,QAAwE,sBAAxE;;AAUA,MAAMC,cAAc,GAAGC,OAAO,CAAC,sBAAD,CAA9B;;AACA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,yCAAD,CAAhC;;AACA,MAAME,kBAAkB,GAAGF,OAAO,CAAC,2CAAD,CAAlC;;AACA,MAAMG,iBAAiB,GAAGH,OAAO,CAAC,2CAAD,CAAjC;;AACA,MAAMI,uBAAuB,GAAGJ,OAAO,CAAC,iDAAD,CAAvC;;AACA,MAAMK,gBAAgB,GAAGL,OAAO,CAAC,iDAAD,CAAhC;;AACA,MAAMM,wBAAwB,GAAGN,OAAO,CAAC,iDAAD,CAAxC;;AAEA,MAAMO,qBAAN,SAAoCR,cAApC,CAAkD;AAgBhDS,cAAYC,IAAZ,EAA+C;AAC7C,UAAM;AAAEC,qBAAe,EAAED,IAAI,CAACC,eAAL,IAAwB;AAA3C,KAAN;AAhBK,kBAAS,kCAAT;AACA,kBAAS,IAAT;AACA,uBAAcjB,WAAd;AACA,8BAAsDkB,SAAtD;AACA,eAAsB,IAAtB;AACA,oBAAW,EAAX;AACA,gBAA8B,IAA9B;AAEA,wBAAe,KAAf;AACA,qBAAY,KAAZ;AACA,4BAA0B,EAA1B;AACA,oBAAqB,EAArB;AACA,mBAAU,CAAV;AACA,kBAAS,EAAT;;AA8CP,kBAAS,YAA8B;AACrC,YAAMC,EAAE,GAAG,MAAM,KAAKC,kBAAL,EAAjB;;AACA,UAAID,EAAJ,EAAQ;AACN,aAAKE,KAAL;AACA,aAAKC,wBAAL;AACA,eAAOH,EAAE,CAACI,QAAV;AACD,OAJD,MAIO;AACL,cAAM,IAAIC,KAAJ,CAAU,mCAAV,CAAN;AACD;AACF,KATD;;AAWA,mBAAU,MAAOC,OAAP,IAAqC;AAC7C,aAAO,KAAKC,IAAL,CAAUD,OAAV,CAAP;AACD,KAFD;;AAIA,gBAAO,OAAOA,OAAP,EAAqBE,QAArB,KAAqD;;;AAE1D,UAAI,OAAOF,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,cAAMG,MAAM,GAAGH,OAAf;AACA,YAAII,MAAM,GAAGF,QAAb;;AAEA,YAAIC,MAAM,KAAK,eAAf,EAAgC;AAC9BC,gBAAM,GAAGzB,iBAAiB,CAACyB,MAAD,CAA1B;AACD;;AAED,eAAO,KAAKC,gBAAL,CAAsBF,MAAtB,EAA8BC,MAA9B,CAAP;AACD;;AAGDJ,aAAO;AAAKM,UAAE,EAAE7B,SAAS,EAAlB;AAAsB8B,eAAO,EAAE;AAA/B,SAAyCP,OAAzC,CAAP;;AAGA,UAAIA,OAAO,CAACG,MAAR,KAAmB,eAAvB,EAAwC;AACtCH,eAAO,CAACI,MAAR,GAAiBzB,iBAAiB,CAACqB,OAAO,CAACI,MAAT,CAAlC;AACD;;AAGD,UAAIF,QAAJ,EAAc;AACZ,aAAKM,SAAL,CAAeR,OAAf,EAAwBE,QAAxB;AACA;AACD;;AAED,UAAIF,OAAO,CAACG,MAAR,KAAmB,sBAAnB,IAA6C,YAAKM,UAAL,MAAe,IAAf,IAAeC,aAAf,GAAe,MAAf,GAAeA,GAAEC,IAAjB,MAA0B,UAA3E,EAAuF;AACrF,cAAM;AAAEC;AAAF,YAAa,MAAM,KAAKC,mBAAL,CAAyBb,OAAzB,CAAzB;AACA,eAAOY,MAAP;AACD,OAHD,MAGO;AACL,eAAO,KAAKP,gBAAL,CAAsBL,OAAO,CAACG,MAA9B,EAAsCH,OAAO,CAACI,MAA9C,CAAP;AACD;AACF,KAjCD;;AAmCA,qBAAaF,QAAD,IAAkB;AAC5B,WAAKY,gBAAL,CAAsBC,IAAtB,CAA2Bb,QAA3B;AACD,KAFD;;AAIA,0BAAkBU,MAAD,IAAgB;AAC/B,UAAI,KAAKE,gBAAL,IAAyB,KAAKA,gBAAL,CAAsBE,MAAnD,EAA2D;AACzD,aAAKF,gBAAL,CAAsBG,OAAtB,CAA8Bf,QAAQ,IAAIA,QAAQ,CAACU,MAAD,CAAlD;AACD;AACF,KAJD;;AAhGE,SAAKM,MAAL,GAAc3B,IAAI,CAAC4B,SAAL,GACV5B,IAAI,CAAC4B,SAAL,CAAeD,MADL,GAEV3B,IAAI,CAAC2B,MAAL,IAAe,kCAFnB;AAGA,SAAKE,MAAL,GAAc,OAAO7B,IAAI,CAAC6B,MAAZ,KAAuB,WAAvB,IAAsC7B,IAAI,CAAC6B,MAAL,KAAgB,KAApE;AACA,SAAKC,WAAL,GAAmB9B,IAAI,CAAC8B,WAAL,IAAoB,KAAKA,WAA5C;AACA,SAAKC,kBAAL,GAA0B/B,IAAI,CAAC+B,kBAA/B;AACA,SAAK5B,EAAL,GACEH,IAAI,CAAC4B,SAAL,IACA,IAAI7C,aAAJ,CAAkB;AAChB4C,YAAM,EAAE,KAAKA,MADG;AAEhBG,iBAAW,EAAE,KAAKD,MAAL,GAAc,KAAKC,WAAnB,GAAiC5B,SAF9B;AAGhB6B,wBAAkB,EAAE,KAAKA,kBAHT;AAIhBC,eAAS,EAAEhC,IAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEgC,SAJD;AAKhB7C,oBAAc,EAAEa,IAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEb,cALN;AAMhB8C,gBAAU,EAAEjC,IAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEiC;AANF,KAAlB,CAFF;AAUA,SAAKC,GAAL,GAAWlC,IAAI,CAACkC,GAAL,IAAY,IAAvB;;AACA,QACE,CAAC,KAAKA,GAAN,KACC,CAAClC,IAAI,CAACmC,QAAN,IAAkB,OAAOnC,IAAI,CAACmC,QAAZ,KAAyB,QAA3C,IAAuD,CAACnC,IAAI,CAACmC,QAAL,CAAcC,IAAd,EADzD,CADF,EAGE;AACA,YAAM,IAAI5B,KAAJ,CAAU,yDAAV,CAAN;AACD;;AACD,SAAK2B,QAAL,GAAgBnC,IAAI,CAACmC,QAAL,IAAiB,EAAjC;AACA,SAAKE,OAAL,GAAe,KAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEA,OAAN,KAAiB,KAAKA,OAArC;AACA,SAAKC,UAAL;AACD;;AAEkB,MAAfC,eAAe;AACjB,WAAO,IAAP;AACD;;AAEY,MAATX,SAAS;AACX,WAAO,KAAKzB,EAAZ;AACD;;AAEa,MAAVe,UAAU;AACZ,WAAO,KAAKf,EAAL,CAAQqC,QAAf;AACD;;AAgEe,QAAVC,UAAU;AACd,SAAKC,KAAL;AACD;;AAEU,QAALA,KAAK;AACT,UAAMvC,EAAE,GAAG,MAAM,KAAKC,kBAAL,CAAwB;AAAEuC,4BAAsB,EAAE;AAA1B,KAAxB,CAAjB;AACA,UAAMxC,EAAE,CAACyC,WAAH,EAAN;AACA,UAAM,KAAKC,YAAL,EAAN;AACD;;AAEkB,QAAbC,aAAa,CAACrC,OAAD,EAAa;AAC9B,QAAI;AACF,UAAIsC,QAAJ;AACA,UAAI1B,MAAM,GAAQ,IAAlB;AACA,YAAMlB,EAAE,GAAG,MAAM,KAAKC,kBAAL,EAAjB;;AACA,cAAQK,OAAO,CAACG,MAAhB;AACE,aAAK,gBAAL;AACE,gBAAM,KAAK8B,KAAL,EAAN;AACArB,gBAAM,GAAG,IAAT;AACA;;AACF,aAAK,cAAL;AACEA,gBAAM,GAAGlB,EAAE,CAACI,QAAZ;AACA;;AACF,aAAK,cAAL;AACEc,gBAAM,GAAGlB,EAAE,CAACI,QAAH,CAAY,CAAZ,CAAT;AACA;;AACF,aAAK,aAAL;AACEc,gBAAM,GAAGlB,EAAE,CAACkC,OAAZ;AACA;;AACF,aAAK,aAAL;AACEhB,gBAAM,GAAGlB,EAAE,CAACkC,OAAZ;AACA;;AACF,aAAK,qBAAL;AACE,eAAKpB,SAAL,CAAeR,OAAf,EAAyBuC,CAAD,IAAYA,CAApC;AACA3B,gBAAM,GAAG,IAAT;AACA;;AACF;AACE0B,kBAAQ,GAAG,MAAM,KAAKzB,mBAAL,CAAyBb,OAAzB,CAAjB;AAtBJ;;AAwBA,UAAIsC,QAAJ,EAAc;AACZ,eAAOA,QAAP;AACD;;AACD,aAAO,KAAKE,cAAL,CAAoBxC,OAApB,EAA6BY,MAA7B,CAAP;AACD,KAhCD,CAgCE,OAAO6B,KAAP,EAAc;AACd,WAAKC,IAAL,CAAU,OAAV,EAAmBD,KAAnB;AACA,YAAMA,KAAN;AACD;AACF;;AAEwB,QAAnB5B,mBAAmB,CAACb,OAAD,EAAa;AACpC,QAAI,CAACtB,cAAc,CAACiE,QAAf,CAAwB3C,OAAO,CAACG,MAAhC,CAAD,IAA4CH,OAAO,CAACG,MAAR,CAAeyC,UAAf,CAA0B,MAA1B,CAAhD,EAAmF;AACjF,aAAO,KAAKC,kBAAL,CAAwB7C,OAAxB,CAAP;AACD;;AACD,UAAMN,EAAE,GAAG,MAAM,KAAKC,kBAAL,EAAjB;AACA,UAAMiB,MAAM,GAAG,MAAMlB,EAAE,CAACoD,iBAAH,CAAqB9C,OAArB,CAArB;AACA,WAAO,KAAKwC,cAAL,CAAoBxC,OAApB,EAA6BY,MAA7B,CAAP;AACD;;AAEuB,QAAlBiC,kBAAkB,CAAC7C,OAAD,EAAa;AACnC,QAAI,CAAC,KAAK+C,IAAV,EAAgB;AACd,YAAMN,KAAK,GAAG,IAAI1C,KAAJ,CAAU,+BAAV,CAAd;AACA,WAAK2C,IAAL,CAAU,OAAV,EAAmBD,KAAnB;AACA,YAAMA,KAAN;AACD;;AACD,WAAO,KAAKM,IAAL,CAAU9C,IAAV,CAAeD,OAAf,CAAP;AACD;;AAEDwC,gBAAc,CAACxC,OAAD,EAAeY,MAAf,EAA0B;AACtC,WAAO;AACLN,QAAE,EAAEN,OAAO,CAACM,EADP;AAELC,aAAO,EAAEP,OAAO,CAACO,OAFZ;AAGLK,YAAM,EAAEA;AAHH,KAAP;AAKD;;AAIDjB,oBAAkB,GAAgD;AAAA,QAA/CJ,IAA+C,uEAAF,EAAE;AAChE,UAAM;AAAE2C,4BAAsB,GAAG;AAA3B,QAAqC3C,IAA3C;AACA,WAAO,IAAIyD,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAoB;AACrC,YAAMxD,EAAE,GAAG,KAAKA,EAAhB;;AACA,UAAI,KAAKyD,YAAT,EAAuB;AACrB,aAAKC,SAAL,CAAgBC,CAAD,IAAYJ,OAAO,CAACI,CAAD,CAAlC;AACD,OAFD,MAEO,IAAI,CAAC3D,EAAE,CAAC4D,SAAJ,IAAiB,CAACpB,sBAAtB,EAA8C;AACnD,aAAKiB,YAAL,GAAoB,IAApB;AACAzD,UAAE,CAAC6D,EAAH,CAAM,cAAN,EAAsB,MAAK;AACzBL,gBAAM,CAAC,IAAInD,KAAJ,CAAU,mBAAV,CAAD,CAAN;AACD,SAFD;AAGAL,UAAE,CAAC8D,aAAH,CAAiB;AAAE5B,iBAAO,EAAE,KAAKA;AAAhB,SAAjB,EACG6B,IADH,CACQ,MAAK;AACT/D,YAAE,CAAC6D,EAAH,CAAM,SAAN,EAAiB,CAACd,KAAD,EAAQzC,OAAR,KAAmB;AAClC,gBAAIyC,KAAJ,EAAW;AACT,mBAAKU,YAAL,GAAoB,KAApB;AACA,qBAAOD,MAAM,CAACT,KAAD,CAAb;AACD;;AACD,iBAAKU,YAAL,GAAoB,KAApB;AACA,iBAAKG,SAAL,GAAiB,IAAjB;;AACA,gBAAItD,OAAJ,EAAa;AAEX,mBAAK0D,WAAL,CAAiB1D,OAAO,CAACI,MAAR,CAAe,CAAf,CAAjB;AACD;;AAED,iBAAKsC,IAAL,CAAU,SAAV;AACA,iBAAKiB,cAAL,CAAoBjE,EAApB;AACAuD,mBAAO,CAACvD,EAAD,CAAP;AACD,WAfD;AAgBD,SAlBH,EAmBGkE,KAnBH,CAmBSnB,KAAK,IAAG;AACb,eAAKU,YAAL,GAAoB,KAApB;AACAD,gBAAM,CAACT,KAAD,CAAN;AACD,SAtBH;AAuBD,OA5BM,MA4BA;AACL,YAAI,CAAC,KAAKa,SAAV,EAAqB;AACnB,eAAKA,SAAL,GAAiB,IAAjB;AACA,eAAKI,WAAL,CAAiBhE,EAAE,CAACmE,OAApB;AACD;;AACDZ,eAAO,CAACvD,EAAD,CAAP;AACD;AACF,KAvCM,CAAP;AAwCD;;AAE6B,QAAxBG,wBAAwB;AAC5B,UAAMH,EAAE,GAAG,MAAM,KAAKC,kBAAL,EAAjB;AACAD,MAAE,CAAC6D,EAAH,CAAM,YAAN,EAAoBd,KAAK,IAAG;AAC1B,UAAIA,KAAJ,EAAW;AACT,aAAKC,IAAL,CAAU,OAAV,EAAmBD,KAAnB;AACA;AACD;;AACD,WAAKL,YAAL;AACD,KAND;AAOA1C,MAAE,CAAC6D,EAAH,CAAM,gBAAN,EAAwB,CAACd,KAAD,EAAQzC,OAAR,KAAmB;AACzC,UAAIyC,KAAJ,EAAW;AACT,aAAKC,IAAL,CAAU,OAAV,EAAmBD,KAAnB;AACA;AACD;;AAED,WAAKiB,WAAL,CAAiB1D,OAAO,CAACI,MAAR,CAAe,CAAf,CAAjB;AACD,KAPD;AAQD;;AAEiB,QAAZgC,YAAY;AAEhB,UAAM,KAAK0B,IAAL,EAAN;AACA,SAAKpB,IAAL,CAAU,OAAV,EAAmB,IAAnB,EAAyB,mBAAzB;AACA,SAAKA,IAAL,CAAU,YAAV,EAAwB,IAAxB,EAA8B,yBAA9B;AACA,SAAKY,SAAL,GAAiB,KAAjB;AACD;;AAEgB,QAAXI,WAAW,CAACK,aAAD,EAAmB;AAClC,UAAM;AAAEjE,cAAF;AAAY8B,aAAZ;AAAqBoC,eAArB;AAAgCC;AAAhC,QAA2CF,aAAjD;;AAEA,QAAI,CAAC,KAAKjE,QAAN,IAAmBA,QAAQ,IAAI,KAAKA,QAAL,KAAkBA,QAArD,EAAgE;AAC9D,WAAKA,QAAL,GAAgBA,QAAhB;AACA,WAAK4C,IAAL,CAAU,iBAAV,EAA6B5C,QAA7B;AACD;;AAED,QAAI,CAAC,KAAK8B,OAAN,IAAkBA,OAAO,IAAI,KAAKA,OAAL,KAAiBA,OAAlD,EAA4D;AAC1D,WAAKA,OAAL,GAAeA,OAAf;AACA,WAAKc,IAAL,CAAU,cAAV,EAA0Bd,OAA1B;AACD;;AAED,QAAI,CAAC,KAAKoC,SAAN,IAAoBA,SAAS,IAAI,KAAKA,SAAL,KAAmBA,SAAxD,EAAoE;AAClE,WAAKA,SAAL,GAAiBA,SAAjB;AACA,WAAKtB,IAAL,CAAU,gBAAV,EAA4BsB,SAA5B;AACD;;AAED,SAAKE,YAAL,CAAkB,KAAKtC,OAAvB,EAAgCqC,MAAM,IAAI,EAA1C;AACD;;AAEDC,cAAY,CAACtC,OAAD,EAAiD;AAAA,QAA/BqC,MAA+B,uEAAF,EAAE;AAC3D,UAAMxC,GAAG,GAAG;AAAEC,cAAQ,EAAE,KAAKA,QAAjB;AAA2ByC,YAAM,EAAE,KAAK1C,GAAL,IAAYhC;AAA/C,KAAZ;AACAwE,UAAM,GAAGA,MAAM,IAAIrF,SAAS,CAACgD,OAAD,EAAUH,GAAV,CAA5B;;AACA,QAAIwC,MAAJ,EAAY;AACV,WAAKA,MAAL,GAAcA,MAAd;AACA,WAAKG,oBAAL;AACD,KAHD,MAGO;AACL,WAAK1B,IAAL,CAAU,OAAV,EAAmB,IAAI3C,KAAJ,CAAU,qCAAqC6B,OAAO,EAAtD,CAAnB;AACD;AACF;;AAEDwC,sBAAoB;AAClB,QAAI,KAAKH,MAAT,EAAiB;AACf,WAAKlB,IAAL,GAAY,IAAIvE,cAAJ,CAAmB,KAAKyF,MAAxB,CAAZ;AACA,WAAKlB,IAAL,CAAUQ,EAAV,CAAa,SAAb,EAAwBvD,OAAO,IAAI,KAAK0C,IAAL,CAAU,SAAV,EAAqB1C,OAArB,CAAnC;AACA,WAAK+C,IAAL,CAAUQ,EAAV,CAAa,OAAb,EAAsBd,KAAK,IAAI,KAAKC,IAAL,CAAU,OAAV,EAAmBD,KAAnB,CAA/B;AACD;AACF;;AAEDpC,kBAAgB,CAACF,MAAD,EAAiBC,MAAjB,EAA4B;AAC1C,WAAO,IAAI4C,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAoB;AACrC,WAAK1C,SAAL,CACE;AACEF,UAAE,EAAE7B,SAAS,EADf;AAEE8B,eAAO,EAAE,KAFX;AAGEJ,cAHF;AAIEC,cAAM,EAAEA,MAAM,IAAI;AAJpB,OADF,EAOE,CAACqC,KAAD,EAAaH,QAAb,KAA8B;AAC5B,YAAIG,KAAJ,EAAW;AACTS,gBAAM,CAACT,KAAD,CAAN;AACA;AACD;;AACDQ,eAAO,CAACX,QAAQ,CAAC1B,MAAV,CAAP;AACD,OAbH;AAeD,KAhBM,CAAP;AAiBD;;AAEOiB,YAAU;AAChB,SAAKqC,YAAL,CAAkB,KAAKtC,OAAvB;AACA,SAAKyC,WAAL,CACE,IAAIrF,kBAAJ,CAAuB;AACrBsF,kBAAY,EAAE,MADO;AAErBC,gBAAU,EAAE,KAFS;AAGrBC,iBAAW,EAAE,IAHQ;AAIrBC,mBAAa,EAAE,IAJM;AAKrBC,wBAAkB,EAAE;AALC,KAAvB,CADF;AASA,SAAKL,WAAL,CAAiB,IAAItF,gBAAJ,EAAjB;AACA,SAAKsF,WAAL,CAAiB,IAAIjF,wBAAJ,EAAjB;AACA,SAAKiF,WAAL,CAAiB,IAAIpF,iBAAJ,EAAjB;AACA,SAAKoF,WAAL,CAAiB,IAAIlF,gBAAJ,EAAjB;AACA,SAAKkF,WAAL,CAAiB,IAAInF,uBAAJ,CAA4B,KAAKyF,YAAL,EAA5B,CAAjB;AACA,SAAKN,WAAL,CAAiB;AACfhC,mBAAa,EAAE,OAAOrC,OAAP,EAAiC4E,IAAjC,EAA4CC,GAA5C,KAAwD;AACrE,YAAI;AACF,gBAAM;AAAEpC,iBAAF;AAAS7B;AAAT,cAAoB,MAAM,KAAKyB,aAAL,CAAmBrC,OAAnB,CAAhC;AACA6E,aAAG,CAACpC,KAAD,EAAQ7B,MAAR,CAAH;AACD,SAHD,CAGE,OAAO6B,KAAP,EAAc;AACdoC,aAAG,CAACpC,KAAD,CAAH;AACD;AACF,OARc;AASfqC,eAAS,EAAGvC,CAAD,IAAYA;AATR,KAAjB;AAWD;;AAEOoC,cAAY;AAClB,WAAO;AACLI,iBAAW,EAAE,MAAOC,EAAP,IAAkB;AAC7B,YAAI;AACF,gBAAMtF,EAAE,GAAG,MAAM,KAAKC,kBAAL,EAAjB;AACA,gBAAMG,QAAQ,GAAGJ,EAAE,CAACI,QAApB;;AACA,cAAIA,QAAQ,IAAIA,QAAQ,CAACkB,MAAzB,EAAiC;AAC/BgE,cAAE,CAAC,IAAD,EAAOlF,QAAP,CAAF;AACD,WAFD,MAEO;AACLkF,cAAE,CAAC,IAAIjF,KAAJ,CAAU,wBAAV,CAAD,CAAF;AACD;AACF,SARD,CAQE,OAAO0C,KAAP,EAAc;AACduC,YAAE,CAACvC,KAAD,CAAF;AACD;AACF,OAbI;AAcLwC,oBAAc,EAAE,OAAOC,SAAP,EAAkDF,EAAlD,KAA6D;AAC3E,YAAI;AACF,gBAAMtF,EAAE,GAAG,MAAM,KAAKC,kBAAL,EAAjB;AACA,gBAAMiB,MAAM,GAAG,MAAMlB,EAAE,CAACyF,WAAH,CAAe,CAACD,SAAS,CAACE,IAAX,EAAiBF,SAAS,CAACG,IAA3B,CAAf,CAArB;AACAL,YAAE,CAAC,IAAD,EAAOpE,MAAP,CAAF;AACD,SAJD,CAIE,OAAO6B,KAAP,EAAc;AACduC,YAAE,CAACvC,KAAD,CAAF;AACD;AACF,OAtBI;AAuBL6C,4BAAsB,EAAE,OAAOJ,SAAP,EAAkDF,EAAlD,KAA6D;AACnF,YAAI;AACF,gBAAMtF,EAAE,GAAG,MAAM,KAAKC,kBAAL,EAAjB;AACA,gBAAMiB,MAAM,GAAG,MAAMlB,EAAE,CAAC6F,mBAAH,CAAuB,CAACL,SAAS,CAACG,IAAX,EAAiBH,SAAS,CAACE,IAA3B,CAAvB,CAArB;AACAJ,YAAE,CAAC,IAAD,EAAOpE,MAAP,CAAF;AACD,SAJD,CAIE,OAAO6B,KAAP,EAAc;AACduC,YAAE,CAACvC,KAAD,CAAF;AACD;AACF,OA/BI;AAgCL+C,4BAAsB,EAAE,OAAOC,QAAP,EAAsBT,EAAtB,KAAiC;AACvD,YAAI;AACF,gBAAMtF,EAAE,GAAG,MAAM,KAAKC,kBAAL,EAAjB;AACA,gBAAMiB,MAAM,GAAG,MAAMlB,EAAE,CAACgG,eAAH,CAAmBD,QAAnB,CAArB;AACAT,YAAE,CAAC,IAAD,EAAOpE,MAAP,CAAF;AACD,SAJD,CAIE,OAAO6B,KAAP,EAAc;AACduC,YAAE,CAACvC,KAAD,CAAF;AACD;AACF,OAxCI;AAyCLkD,wBAAkB,EAAE,OAAOF,QAAP,EAAsBT,EAAtB,KAAiC;AACnD,YAAI;AACF,gBAAMtF,EAAE,GAAG,MAAM,KAAKC,kBAAL,EAAjB;AACA,gBAAMiB,MAAM,GAAG,MAAMlB,EAAE,CAACkG,eAAH,CAAmBH,QAAnB,CAArB;AACAT,YAAE,CAAC,IAAD,EAAOpE,MAAP,CAAF;AACD,SAJD,CAIE,OAAO6B,KAAP,EAAc;AACduC,YAAE,CAACvC,KAAD,CAAF;AACD;AACF,OAjDI;AAkDLoD,yBAAmB,EAAE,OAAOX,SAAP,EAAkDF,EAAlD,KAA6D;AAChF,YAAI;AACF,gBAAMtF,EAAE,GAAG,MAAM,KAAKC,kBAAL,EAAjB;AACA,gBAAMiB,MAAM,GAAG,MAAMlB,EAAE,CAACoG,aAAH,CAAiB,CAACZ,SAAS,CAACE,IAAX,EAAiBF,SAAS,CAACG,IAA3B,CAAjB,CAArB;AACAL,YAAE,CAAC,IAAD,EAAOpE,MAAP,CAAF;AACD,SAJD,CAIE,OAAO6B,KAAP,EAAc;AACduC,YAAE,CAACvC,KAAD,CAAF;AACD;AACF;AA1DI,KAAP;AA4DD;;AAla+C;;AAqalD,eAAepD,qBAAf","names":["WalletConnect","QRCodeModal","HttpConnection","payloadId","signingMethods","parsePersonalSign","getRpcUrl","ProviderEngine","require","CacheSubprovider","FixtureSubprovider","FilterSubprovider","HookedWalletSubprovider","NonceSubprovider","SubscriptionsSubprovider","WalletConnectProvider","constructor","opts","pollingInterval","undefined","wc","getWalletConnector","start","subscribeWalletConnector","accounts","Error","payload","send","callback","method","params","sendAsyncPromise","id","jsonrpc","sendAsync","walletMeta","_a","name","result","handleOtherRequests","connectCallbacks","push","length","forEach","bridge","connector","qrcode","qrcodeModal","qrcodeModalOptions","storageId","clientMeta","rpc","infuraId","trim","chainId","initialize","isWalletConnect","peerMeta","disconnect","close","disableSessionCreation","killSession","onDisconnect","handleRequest","response","_","formatResponse","error","emit","includes","startsWith","handleReadRequests","sendCustomRequest","http","Promise","resolve","reject","isConnecting","onConnect","x","connected","on","createSession","then","updateState","triggerConnect","catch","session","stop","sessionParams","networkId","rpcUrl","updateRpcUrl","custom","updateHttpConnection","addProvider","eth_hashrate","eth_mining","eth_syncing","net_listening","web3_clientVersion","configWallet","next","end","setEngine","getAccounts","cb","processMessage","msgParams","signMessage","from","data","processPersonalMessage","signPersonalMessage","processSignTransaction","txParams","signTransaction","processTransaction","sendTransaction","processTypedMessage","signTypedData"],"sourceRoot":"","sources":["../../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}